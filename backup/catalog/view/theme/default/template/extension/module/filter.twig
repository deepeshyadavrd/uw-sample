{# <div class="panel panel-default">
  <div class="panel-heading">{{ heading_title }}</div>
  <div class="list-group"> {% for filter_group in filter_groups %} <a class="list-group-item">{{ filter_group.name }}</a>
    <div class="list-group-item">
      <div id="filter-group{{ filter_group.filter_group_id }}">{% for filter in filter_group.filter %}
        <div class="checkbox">
          <label>{% if filter.filter_id in filter_category %}
            <input type="checkbox" name="filter[]" value="{{ filter.filter_id }}" checked="checked" />
            {{ filter.name }}
            {% else %}
            <input type="checkbox" name="filter[]" value="{{ filter.filter_id }}" />
            {{ filter.name }}
            {% endif %}</label>
        </div>
        {% endfor %}</div>
    </div>
    {% endfor %}</div>
  <div class="panel-footer text-right">
    <button type="button" id="button-filter" class="btn btn-primary">{{ button_filter }}</button>
  </div>
</div> #}

<style type="text/css">
    .slider-example {
        padding-top: 10px;
        padding-bottom: 55px;
        margin: 35px 0;
    }
</style>
<div class="col-lg-12 col-md-12 col-sm-12 d-md-none d-block">
        <div class="fillter-mob-sec">
          <div class="d-flex justify-content-between align-items-center"> 
        <h6>Sort/Filter</h6>
        <button class="btn filter-button" type="button" data-bs-toggle="offcanvas" data-bs-target="#filtercanvas" aria-controls="offcanvasRight"> <i class="fas fa-sort-amount-up-alt"></i></button>
          </div>
          <div class="offcanvas offcanvas-end" tabindex="-1" id="filtercanvas" aria-labelledby="offcanvasRightLabel">
            <div class="offcanvas-header">
              <h5 id="offcanvasRightLabel">Sort/Filter</h5>
              <button type="button" class=" text-reset" data-bs-dismiss="offcanvas" aria-label="Close" style="background: none; border: none; "> <i class="fas fa-arrow-left"></i></button>
            </div>
            <div class="offcanvas-body">
              <div class="filter-box">
                <div class="short-by-sec">
                  <div class="accordion" id="accordionPanelsStayOpen1">
                    <div class="accordion-item accordion-item-filter">
                      <h2 class="accordion-header" id="panelsStayOpen-headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
                          Sort by
                        </button>
                      </h2>
                      <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOne">
                        <div class="accordion-body">
                         <ul>
                          {% for sorts in sorts %}
           {% if sorts.value == '%s-%s'|format(sort, order) %}
            <li>
            <div class="form-check filter-switch">
              <input class="form-check-input" value={{ sorts.href }} onchange="stickyheaddsadaer(this)" type="checkbox" id="flexSwitchCheckChecked1" checked>
              <label class="form-check-label" for="flexSwitchCheckChecked">{{ sorts.text }}</label>
            </div>
          </li>
          {% else %}
          <li>
            <div class="form-check filter-switch">
              <input class="form-check-input" value={{ sorts.href }} onchange="stickyheaddsadaer(this)" type="checkbox" id="flexSwitchCheckChecked1">
              <label class="form-check-label" for="flexSwitchCheckChecked">{{ sorts.text }}</label>
            </div>
          </li>
          {% endif %}
           {% endfor %}
                           </ul>
                         </div>
                        </div>
                      </div>
              
                    <div class="accordion-item accordion-item-filter">
                      <h2 class="accordion-header" id="headingTwo">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                          Primary Material
                        </button>
                      </h2>
                      <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                         
                          <ul>
                            <li>
                            <div class="form-check filter-switch">
                              <input class="form-check-input" type="checkbox" id="flexSwitchCheckChecke2" checked>
                              <label class="form-check-label" for="flexSwitchCheckChecked">Sheesham Wood</label>
                            </div>
                          </li>
                         
                             </ul>
                        </div>
                      </div>
                    </div>
              
                  </div>
              
                  <div class="filter-sec-heading"> Filter</div>
                  {% if min_max != 0 %}
<div class="rangeslider">
  <div class="price-input">
    <div class="field">
      <span>Min</span>
      <input type="text" id="m-amount" class="input-min" value="{{ (price_range[0] is defined and price_range[0] != '')? price_range[0]: price_range_min }}">
    </div>
    <div class="separator">-</div>
    <div class="field">
      <span>Max</span>
      <input type="text" id="m-amount2" class="input-max" value="{{ (price_range[1] is defined and price_range[1] != '')? price_range[1]: price_range_max }}">
    </div>
  </div>
  <div id="m-slider-range" ></div>
  <div class="range-input">
    <input type="hidden" class="range-min" id="m-total" data-value="{{ action2 }}">
  </div>
</div>
{% endif %}
                  <div class="accordion" id="accordionPanelsStayOpen2">
                    {% for filter_group in filter_groups %}
    <div class="accordion-item accordion-item-filter">
    
        <h2 class="accordion-header" id="headingTwo">
          <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo{{ filter_group.filter_group_id }}" aria-expanded="true" aria-controls="collapseTwo">
            {{ filter_group.name }}
          </button>
        </h2>
        <div id="collapseTwo{{ filter_group.filter_group_id }}" class="accordion-collapse collapse show" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
          <div class="accordion-body">
           
            <ul>
            {% for filter in filter_group.filter %}
              <li>
              <div class="form-check filter-switch">
              {% if filter.filter_id in filter_category %}
                <input class="form-check-input ifilter" name="filter[]" id="{{ filter.filter_id }}" value="{{ filter.filter_id }}" type="checkbox" id="flexSwitchCheckChecke2" >
                <label class="form-check-label" for="flexSwitchCheckChecked">{{ filter.name }}</label>
                {% else %}
                <input class="form-check-input ifilter" name="filter[]" id="{{ filter.filter_id }}" value="{{ filter.filter_id }}" type="checkbox" id="flexSwitchCheckChecke2">
                <label class="form-check-label" for="flexSwitchCheckChecked">{{ filter.name }}</label>
                {% endif %}
                
              </div>
            </li>
           {% endfor %}
               </ul>
          </div>
        </div>
        
      </div>
      {% endfor %}
                  </div>
                 
              
              
              
                    
                    </div>
                  </div>
            </div>
          </div>
          </div>
      </div>
<div class="col-md-3 col-sm-3 position-relative">
<div class="filter-box d-md-block d-none">
  <div class="short-by-sec">
    <div class="accordion" id="accordionPanelsStayOpen1">
      <div class="accordion-item accordion-item-filter">
        <h2 class="accordion-header" id="panelsStayOpen-headingOneS">
          <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOneS" aria-expanded="true" aria-controls="panelsStayOpen-collapseOneS">
            Sort by
          </button>
        </h2>
        <div id="panelsStayOpen-collapseOneS" class="accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOneS">
          <div class="accordion-body">
           <ul>
           {% for sorts in sorts %}
           {% if sorts.value == '%s-%s'|format(sort, order) %}
            <li>
            <div class="form-check filter-switch">
              <input class="form-check-input" value={{ sorts.href }} onchange="stickyheaddsadaer(this)" type="checkbox" id="flexSwitchCheckChecked1" checked>
              <label class="form-check-label" for="flexSwitchCheckChecked">{{ sorts.text }}</label>
            </div>
          </li>
          {% else %}
          <li>
            <div class="form-check filter-switch">
              <input class="form-check-input" value={{ sorts.href }} onchange="stickyheaddsadaer(this)" type="checkbox" id="flexSwitchCheckChecked1">
              <label class="form-check-label" for="flexSwitchCheckChecked">{{ sorts.text }}</label>
            </div>
          </li>
          {% endif %}
           {% endfor %}
            
             </ul>
           </div>
          </div>
        </div>

      

    </div>

    
<div class="filter-sec-heading"> Filter</div>
{% if min_max != 0 %}
<div class="rangeslider">
  <div class="price-input">
    <div class="field">
      <span>Min</span>
      <input type="text" id="amount" class="input-min" value="{{ (price_range[0] is defined and price_range[0] != '')? price_range[0]: price_range_min }}">
    </div>
    <div class="separator">-</div>
    <div class="field">
      <span>Max</span>
      <input type="text" id="amount2" class="input-max" value="{{ (price_range[1] is defined and price_range[1] != '')? price_range[1]: price_range_max }}">
    </div>
  </div>
  <div id="slider-range" ></div>
  <div class="range-input">
    <input type="hidden" class="range-min" id="total" data-value="{{ action2 }}">
  </div>
</div>
{% endif %}
    <div class="accordion" id="accordionPanelsStayOpen2">
    {% for filter_group in filter_groups %}
    <div class="accordion-item accordion-item-filter">
    
        <h2 class="accordion-header" id="headingTwo">
          <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo{{ filter_group.filter_group_id }}" aria-expanded="true" aria-controls="collapseTwo">
            {{ filter_group.name }}
          </button>
        </h2>
        <div id="collapseTwo{{ filter_group.filter_group_id }}" class="accordion-collapse collapse show" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
          <div class="accordion-body">
           
            <ul>
            {% for filter in filter_group.filter %}
              <li>
              <div class="form-check filter-switch">
              {% if filter.filter_id in filter_category %}
                <input class="form-check-input ifilter" name="filter[]" id="{{ filter.filter_id }}" value="{{ filter.filter_id }}" type="checkbox" id="flexSwitchCheckChecke2" checked>
                <label class="form-check-label" for="flexSwitchCheckChecked">{{ filter.name }}</label>
                {% else %}
                <input class="form-check-input ifilter" name="filter[]" id="{{ filter.filter_id }}" value="{{ filter.filter_id }}" type="checkbox" id="flexSwitchCheckChecke2">
                <label class="form-check-label" for="flexSwitchCheckChecked">{{ filter.name }}</label>
                {% endif %}
                
              </div>
            </li>
           {% endfor %}
               </ul>
          </div>
        </div>
        
      </div>
      {% endfor %}
      </div>
      </div>
    </div>
    </div>
    

      <script type="text/javascript">
$('.ifilter').on('click', function() {
	filter = [];

	$('input[name^=\'filter\']:checked').each(function(element) {
		filter.push(this.value);
	});

	location = '{{ action }}&filter=' + filter.join(',');
});
//--></script> 

{# price slider filter #}
    <script>
    //alert({{ price_range[0] }});
	if( {{ price_range|length }} != 0){
    // alert('here');
	    var handlers = [{{ price_range[0] }},  {{ price_range[1] }}];
    }else{
      // alert('here2');
      var handlers = [{{ price_min }},  {{ price_max }}];
    }
  // alert(handlers);
    $("#slider-range").slider({
        range: true,
        min: 15000,
        max: 90000,
        values: handlers,//[15000, 90000],
        slide: function (event, ui) {
            //$("#amount").val("$" + ui.values[0] + " - $" + ui.values[1]);
            $("#amount").val( ui.values[0]);
            $( "#amount2" ).val( ui.values[ 1 ] );
            $("#total").val($( "#amount" ).val()+','+$( "#amount2" ).val());
            
        },
        change: function(event, ui) {
        pr = '';
        price = $('#total').val();
        if (price != '') {
            pr = "&pr=" + price;
        }
        location = $('#total').attr('data-value') + pr; 
    }
    });
    $("#amount").change(function() {
	    $("#slider-range").slider('values',0,$(this).val());
      $("#total").val($( "#amount" ).val()+','+$( "#amount2" ).val());
      pr = '';
        price = $('#total').val();
        if (price != '') {
            pr = "&pr=" + price;
        }
        location = $('#total').attr('data-value') + pr; 
	});
	$("#amount2").change(function() {
	    $("#slider-range").slider('values',1,$(this).val());
      $("#total").val($( "#amount" ).val()+','+$( "#amount2" ).val());
      pr = '';
        price = $('#total').val();
        if (price != '') {
            pr = "&pr=" + price;
        }
        location = $('#total').attr('data-value') + pr; 
	});

    


</script>
{# mobile price range slider #}
<script>
    //alert({{ price_range[0] }});
	if( {{ price_range|length }} != 0){
    // alert('here');
	    var handlers = [{{ price_range[0] }},  {{ price_range[1] }}];
    }else{
      // alert('here2');
      var handlers = [{{ price_min }},  {{ price_max }}];
    }
  // alert(handlers);
    $("#m-slider-range").slider({
        range: true,
        min: 15000,
        max: 90000,
        values: handlers,//[15000, 90000],
        slide: function (event, ui) {
            //$("#amount").val("$" + ui.values[0] + " - $" + ui.values[1]);
            $("#m-amount").val( ui.values[0]);
            $( "#m-amount2" ).val( ui.values[ 1 ] );
            $("#m-total").val($( "#m-amount" ).val()+','+$( "#m-amount2" ).val());
            
        },
        change: function(event, ui) {
        pr = '';
        price = $('#m-total').val();
        if (price != '') {
            pr = "&pr=" + price;
        }
        location = $('#m-total').attr('data-value') + pr; 
    }
    });
    $("#m-amount").change(function() {
	    $("#m-slider-range").slider('values',0,$(this).val());
      $("#m-total").val($( "#m-amount" ).val()+','+$( "#m-amount2" ).val());
      pr = '';
        price = $('#m-total').val();
        if (price != '') {
            pr = "&pr=" + price;
        }
        location = $('#m-total').attr('data-value') + pr; 
	});
	$("#m-amount2").change(function() {
	    $("#m-slider-range").slider('values',1,$(this).val());
      $("#m-total").val($( "#m-amount" ).val()+','+$( "#m-amount2" ).val());
      pr = '';
        price = $('#m-total').val();
        if (price != '') {
            pr = "&pr=" + price;
        }
        location = $('#m-total').attr('data-value') + pr; 
	});


</script>

<script>
  const rangeInput = document.querySelectorAll(".range-input input"),
priceInput = document.querySelectorAll(".price-input input"),
range = document.querySelector(".slider-range .progress");
let priceGap = 1000;

priceInput.forEach(input =>{
    input.addEventListener("input", e =>{
        let minPrice = parseInt(priceInput[0].value),
        maxPrice = parseInt(priceInput[1].value);
        
        if((maxPrice - minPrice >= priceGap) && maxPrice <= rangeInput[1].max){
            if(e.target.className === "input-min"){
                rangeInput[0].value = minPrice;
                range.style.left = ((minPrice / rangeInput[0].max) * 100) + "%";
            }else{
                rangeInput[1].value = maxPrice;
                range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + "%";
            }
        }
    });
});

rangeInput.forEach(input =>{
    input.addEventListener("input", e =>{
        let minVal = parseInt(rangeInput[0].value),
        maxVal = parseInt(rangeInput[1].value);

        if((maxVal - minVal) < priceGap){
            if(e.target.className === "range-min"){
                rangeInput[0].value = maxVal - priceGap
                alert(rangeInput[0].value = maxVal - priceGap);
            }else{
                rangeInput[1].value = minVal + priceGap;
            }
        }else{
            priceInput[0].value = minVal;
            priceInput[1].value = maxVal;
            range.style.left = ((minVal / rangeInput[0].max) * 100) + "%";
            range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + "%";
        }
    });
});
</script>