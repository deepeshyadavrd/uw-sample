{{ header }}
{{ menu }}
{{ wishlist }}
<link  rel="stylesheet"  href="catalog/view/javascript/assets/css/category.css" > 
<style>
.red{
  color: red!important;
}
</style>

<div class="wrapper">
<!--- banner section-->
<div class="qu-sec py-2 ">
  <div class="container container-custom">
    <div class="row">
<div class="col-md-12 col-sm-12">
  <nav class="breadcumb-navigation" >
    <ol class="breadcrumb m-0 p-2">
    
    {% for breadcrumb in breadcrumbs %}
      <li class="breadcrumb-item "> <a href="#">{{ breadcrumb.text }}</a></li>
    {% endfor %}
      
      {# <li class="breadcrumb-item "> <a href="#">Bedroom Furniture </a></li>
      <li class="breadcrumb-item "> <a href="">Bedroom Storage</a></li>
      <li class="breadcrumb-item active" aria-current="page">Beds</li> #}
    </ol>
  </nav>   
</div>
</div>
    </div>
</div>


  <section class=" py-2">
    <div class="container container-custom">
      <div class="row">
        <div class="col-lg-10 m-auto">
          <h2 class="pg-heading text-center">{{ heading_title }}</h2>
          <div class="ViewContent">
            <p class="heading-para text-center px-lg-5">{{ description|striptags('<b>,<span>,<a>') }}</p>
            <span type="button" class="btAnimate" value="Read more"></span>
            <div id="divC">
               <p class="heading-para text-center "> 
      With king size beds with storage, you can maintain organization while making the best use of your open area and reducing clutter. 
        To get the greatest deal on a king-sized bed at a cost that works for you,
         you can now browse the selection of beds available online at Urbanwood. King-size beds are usually quite comfortable. </p>
         <h2 class="font-table-heading my-3" style="text-align:center;">Wardrobes Price List in India</h2>
<table class="table table-bordered table-price-pp">
  <thead>
    <tr>
      <th scope="col">Wardrobes Online in India</th>
      <th scope="col">Price</th>
    </tr>
  </thead>
  <tbody>
      {% for product in products|slice(0, 5) %}
      <tr>
      <td scope="row"><a href="{{ product.href }}" target="_blank" rel="noopener noreferrer"> {{ product.name }}</a> </td>
      <td>{{ product.special }}</td>
    </tr>
            
      {% endfor %}
  </tbody>
</table>

                        <input type="button" id="btHide" value="Read less" />
                
            </div>
        </div>
        </div>
        </div>
        </div>
      </section>

  <section>
  <style>
  .pbc{
    background: white;
    width:155px;
  }

  .ipc{
background-image: -webkit-linear-gradient(left, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-image: -o-linear-gradient(left, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-image: linear-gradient(90deg, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-size: 250px;
  -webkit-animation: shine-loading-image 2s infinite ease-out;
          animation: shine-loading-image 2s infinite ease-out;
    width: 98%;
    height: 94px;
  }

  .cat-txt{
background-image: -webkit-linear-gradient(left, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-image: -o-linear-gradient(left, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-image: linear-gradient(90deg, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-size: 250px;
  -webkit-animation: shine-loading-image 2s infinite ease-out;
          animation: shine-loading-image 2s infinite ease-out;
    width: 85%;
    height: 14px;
  }
  .buttoncn{
background-image: -webkit-linear-gradient(left, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-image: -o-linear-gradient(left, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-image: linear-gradient(90deg, #ececec 0px, #f4f4f4 40px, #ececec 80px);
  background-size: 250px;
  -webkit-animation: shine-loading-image 2s infinite ease-out;
          animation: shine-loading-image 2s infinite ease-out;
    height: 18px;
  }
@-webkit-keyframes shine-loading-image {
  0% {
    background-position: -32px;
  }
  40%, 100% {
    background-position: 208px;
  }
}


@keyframes shine-loading-image {
  0% {
    background-position: -32px;
  }
  40% {
    background-position: 180px;
  }
  100% {
    background-position: 250px;
  }
}
  
  </style>
    <div class="container container-custom">
      <div class="row">
        <div class="d-flex justify-content-md-center  m-md-auto  categories-pp">
        <div class=" pp-box-cat pbc">
            <div class="img-pp-cat ipc "></div>
              <div class="con-pp-cat"> 
                <span class="cat-txt "></span>
              </div>
            <div class="buttoncn check-out-pp "> </div>
          </div>
        <div class="active2 pp-box-cat">
          <div class="img-pp-cat"> <img src="catalog/view/javascript/assets/image/product-slider-img/img1.png" alt=""></div>
          <div class="con-pp-cat"> 
          <span>King Size Beds</span><span> <i class="fas fa-star"></i> (4.5)</span>
          </div>
          <div> <a href="" class="check-out-pp" disabled>check now</a></div>
        </div>
        <div class="pp-box-cat">
          <div class="img-pp-cat"> <img src="catalog/view/javascript/assets/image/product-slider-img/img1.png" alt=""></div>
          <div class="con-pp-cat"> 
          <span>Queen Size Beds</span><span> <i class="fas fa-star"></i> (4.5)</span>
          </div>
          <div> <a href="" class="check-out-pp">check now</a></div>
        </div>

        <div class="pp-box-cat">
          <div class="img-pp-cat"> <img src="catalog/view/javascript/assets/image/product-slider-img/img1.png" alt=""></div>
          <div class="con-pp-cat"> 
          <span>Single Beds</span><span> <i class="fas fa-star"></i> (4.5)</span>
          </div>
          <div> <a href="" class="check-out-pp">check now</a></div>
        </div>

        <div class="pp-box-cat">
          <div class="img-pp-cat"> <img src="catalog/view/javascript/assets/image/product-slider-img/img1.png" alt=""></div>
          <div class="con-pp-cat"> 
          <span>Poster Beds</span><span> <i class="fas fa-star"></i> (4.5)</span>
          </div>
          <div> <a href="" class="check-out-pp">check now</a></div>
        </div>

        <div class="pp-box-cat">
          <div class="img-pp-cat"> <img src="catalog/view/javascript/assets/image/product-slider-img/img1.png" alt=""></div>
          <div class="con-pp-cat"> 
          <span>Sofa Cum Beds</span><span> <i class="fas fa-star"></i> (4.5)</span>
          </div>
          <div> <a href="" class="check-out-pp">check now</a></div>
        </div>

      </div>
        </div>
        </div>
  </section>    
  <style>
:root{
--gap:16px;
--bg:#0b0b0b;
--card-bg:#1a1a1a;
--text:#ffffff;
--accent:#ff9800;
--glow:#ffcc66;
}



.offer-grid{ display:none; }


@media (min-width:1024px){
.cont{
/* max-width:1800px; */
margin:40px auto;
padding:20px;
position:relative;
background: radial-gradient(circle at top, #1a1a1a, #0b0b0b);
}


/* Floating diyas - changed to working PNG */
.diya{
position:absolute;
width:50px; height:50px;
background:url('image/diya.png') no-repeat center/contain;
animation: float 6s ease-in-out infinite;
pointer-events:none;
opacity:0.9;
z-index:2;
}


.diya:nth-child(1){ top:10%; left:5%; animation-delay:0s; }
.diya:nth-child(2){ top:20%; right:10%; animation-delay:1.5s; }
.diya:nth-child(3){ bottom:15%; left:15%; animation-delay:3s; }
.diya:nth-child(4){ bottom:20%; right:8%; animation-delay:4.5s; }


@keyframes float {
0%,100%{ transform:translateY(0px); }
50%{ transform:translateY(-12px); }
}


.offer-grid{
display:grid;
grid-template-columns:repeat(6, 1fr);
gap:16px;
position:relative;
z-index:3;
}


.offer-card{
background:linear-gradient(160deg, #880f80, rgba(255,152,0,0.05));
border-radius:12px;
display:flex;
align-items:center;
justify-content:center;
text-align:center;
padding:14px;
box-shadow:0 4px 12px rgba(0,0,0,0.6);
border:1px solid rgba(255,255,255,0.1);
transition:transform .25s ease, box-shadow .25s ease, filter .3s ease;
text-decoration:none;
color:#ffffff;
}

/* .offer-card::after{
content:"";
position:absolute;
top:0; left:-100%;
width:100%; height:100%;
background:linear-gradient(120deg, transparent, rgba(255,255,255,0.2), transparent);
transition: all 0.6s ease;
} */


.offer-card:hover::after{
left:100%;
}


.offer-card:hover{
transform:scale(1.07) rotate(-1deg);
box-shadow:0 0 25px #ffcc66;
filter: drop-shadow(0 0 10px orange);
cursor: pointer;
}


.offer-card:active{
transform:scale(0.97);
}


/* Firework spark on click */
.spark{
position:absolute;
width:6px; height:6px;
background:#ff9800;
border-radius:50%;
pointer-events:none;
animation: explode 0.6s ease forwards;
}


@keyframes explode {
0%{ transform:scale(1) translate(0,0); opacity:1; }
100%{ transform:scale(0.2) translate(var(--x), var(--y)); opacity:0; }
}


.line1 { font-size:13px; font-weight:400; color:rgba(255,255,255,0.8); }
.line2 { font-size:18px; font-weight:700; color:#ff9800; text-shadow:0 0 6px rgba(255,152,0,0.6); }
.line3 { font-size:13px; font-weight:400; margin-top:4px; }
.line4 { font-size:15px; font-weight:700; margin-top:2px; color:#fff5d7; text-shadow:0 0 8px rgba(255,204,102,0.8); }
}

.deep-space-section {
  position: relative;
  background: #000;
  /* min-height: 100vh; */
  overflow: hidden;
}

#fireworks-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

/* .content {
  position: relative;
  z-index: 2;
  color: white;
  text-align: center;
  padding: 2rem;
} */

/* Firework particle styles */
.firework-particle {
  position: absolute;
  border-radius: 50%;
  pointer-events: none;
  opacity: 0;
}
.rocket-trail {
  position: absolute;
  border-radius: 50%;
  pointer-events: none;
  opacity: 0;
  background: linear-gradient(to top, rgba(255, 255, 200, 0.8), transparent);
}
.burst-particle {
  position: absolute;
  border-radius: 50%;
  pointer-events: none;
  opacity: 0;
  filter: blur(0.5px);
  box-shadow: 0 0 6px rgba(255, 230, 100, 0.6);
}
/* Optional: Add twinkling stars in background */
/* Add subtle background stars */
.deep-space-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(2px 2px at 10% 20%, rgba(255, 255, 255, 0.4) 50%, transparent 50%),
    radial-gradient(1px 1px at 30% 60%, rgba(255, 255, 255, 0.3) 50%, transparent 50%),
    radial-gradient(1px 1px at 50% 30%, rgba(255, 255, 255, 0.3) 50%, transparent 50%),
    radial-gradient(2px 2px at 70% 70%, rgba(255, 255, 255, 0.4) 50%, transparent 50%),
    radial-gradient(1px 1px at 90% 40%, rgba(255, 255, 255, 0.3) 50%, transparent 50%);
  background-size: 300px 300px;
  z-index: 0;
  animation: twinkle 10s infinite ease-in-out;
}

@keyframes twinkle {
  0%, 100% { opacity: 0.2; }
  50% { opacity: 0.6; }
}
</style>
<section class="deep-space-section">
  <div id="fireworks-container"></div>
<div class="container-fluid cont">
  <div class="offer-grid">
    <div class="offer-card"><div><div class="line1">Spend</div><div class="line2">Above 50k</div><div class="line3">and Get</div><div class="line4">Bed Side Table</div></div></div>
    <div class="offer-card"><div><div class="line1">Spend</div><div class="line2">Above 80k</div><div class="line3">and Get</div><div class="line4">Corner Shelf</div></div></div>
    <div class="offer-card"><div><div class="line1">Spend</div><div class="line2">Above 1,15,000</div><div class="line3">and Get</div><div class="line4">Small Coffee Table</div></div></div>
    <div class="offer-card"><div><div class="line1">Spend</div><div class="line2">Above 1,50,000</div><div class="line3">and Get</div><div class="line4">Large Coffee Table</div></div></div>
    <div class="offer-card"><div><div class="line1">Spend</div><div class="line2">Above 2L</div><div class="line3">and Get</div><div class="line4">Console Table</div></div></div>
    <div class="offer-card">
      <div>
        <div class="line1">And</div><div class="line2">Many More</div>
        {# <div class="line3">and Get</div><div class="line4">Side & Console Table</div> #}
      </div>
    </div>
    
  </div>
</div>
</section>
<script>
class BoldRocketFireworks {
  constructor(containerId) {
    this.container = document.getElementById(containerId);
    this.particles = [];
    this.isRunning = false;
    
    // Enhanced configuration for bold, diagonal rockets
    this.config = {
      minDelay: 3500,        // 3.5 seconds between rockets
      maxDelay: 9000,        // 9 seconds max
      rocketSpeed: 0.7,      // Slow rocket ascent
      burstParticleCount: 80, // More particles for bolder burst
      maxParticleSize: 4,    // Bigger particles
      minParticleSize: 1.5,
      burstRadius: 120,      // Larger burst radius
      colors: {
        rocket: [
          'rgba(255, 255, 180, 0.95)',  // Bright rocket
          'rgba(255, 245, 150, 0.9)',   // Warm rocket
          'rgba(255, 235, 120, 0.85)'   // Golden rocket
        ],
        burst: [
          'rgba(255, 255, 180, 0.8)',   // Bright yellow burst
          'rgba(255, 240, 140, 0.75)',  // Warm yellow
          'rgba(255, 230, 100, 0.7)',   // Golden yellow
          'rgba(255, 220, 80, 0.65)',   // Orange-yellow
          'rgba(255, 210, 60, 0.6)'     // Deep yellow
        ]
      },
      rocketDuration: 2500,  // Slower rocket flight
      burstDuration: 4500,   // Slower burst expansion
      trailParticles: 12,    // More trail particles for longer trail
      trailSpacing: 12,      // Closer spacing for continuous trail
      maxHorizontalDrift: 150, // Maximum diagonal movement
      trailFadeDuration: 1500 // Longer trail fade
    };
  }

  start() {
    this.isRunning = true;
    this.launchRocket();
  }

  stop() {
    this.isRunning = false;
  }

  launchRocket() {
    if (!this.isRunning) return;

    // Random starting position at bottom
    const startX = Math.random() * (this.container.offsetWidth - 100) + 50;
    const startY = this.container.offsetHeight + 15; // Start from bottom
    const targetY = 40 + Math.random() * (this.container.offsetHeight * 0.3); // Random height

    // Create rocket with diagonal movement
    this.createRocket(startX, startY, targetY);

    // Schedule next rocket with random delay
    const nextDelay = Math.random() * 
      (this.config.maxDelay - this.config.minDelay) + 
      this.config.minDelay;
    
    setTimeout(() => this.launchRocket(), nextDelay);
  }

  createRocket(startX, startY, targetY) {
    const rocket = document.createElement('div');
    rocket.className = 'firework-particle';
    
    // Rocket styling - bolder and brighter
    const size = 3;
    const color = this.config.colors.rocket[
      Math.floor(Math.random() * this.config.colors.rocket.length)
    ];

    rocket.style.width = `${size}px`;
    rocket.style.height = `${size}px`;
    rocket.style.background = color;
    rocket.style.left = `${startX}px`;
    rocket.style.top = `${startY}px`;
    rocket.style.boxShadow = '0 0 12px rgba(255, 255, 200, 0.9)';
    rocket.style.zIndex = '10';

    this.container.appendChild(rocket);

    // Calculate diagonal movement
    const horizontalDrift = (Math.random() - 0.5) * 2 * this.config.maxHorizontalDrift;
    const targetX = startX + horizontalDrift;

    // Animate rocket ascent with diagonal movement and trail
    this.animateRocket(rocket, startX, startY, targetX, targetY);
  }

  animateRocket(rocket, startX, startY, targetX, targetY) {
    const distanceY = targetY - startY;
    const distanceX = targetX - startX;
    const trailCount = this.config.trailParticles;

    // Rocket diagonal ascent animation
    const rocketKeyframes = [
      { 
        transform: 'translate(0, 0) scale(1)',
        opacity: 1
      },
      { 
        transform: `translate(${distanceX * 0.8}px, ${distanceY * 0.8}px) scale(1.3)`,
        opacity: 1,
        offset: 0.7
      },
      { 
        transform: `translate(${distanceX}px, ${distanceY}px) scale(1.5)`,
        opacity: 1,
        offset: 0.9
      },
      { 
        transform: `translate(${distanceX}px, ${distanceY}px) scale(0.1)`,
        opacity: 0
      }
    ];

    const rocketAnimation = rocket.animate(rocketKeyframes, {
      duration: this.config.rocketDuration,
      easing: 'cubic-bezier(0.1, 0.8, 0.2, 1)',
      fill: 'forwards'
    });

    // Create continuous trail during ascent
    this.createRocketTrail(startX, startY, targetX, targetY, trailCount);

    // When rocket reaches target, create bold burst
    rocketAnimation.onfinish = () => {
      this.createBoldCircularBurst(targetX, targetY);
      if (rocket.parentNode) {
        rocket.parentNode.removeChild(rocket);
      }
    };
  }

  createRocketTrail(startX, startY, targetX, targetY, trailCount) {
    for (let i = 0; i < trailCount; i++) {
      const progress = i / trailCount;
      const trailX = startX + (targetX - startX) * progress;
      const trailY = startY + (targetY - startY) * progress;
      
      setTimeout(() => {
        this.createTrailParticle(trailX, trailY, progress);
      }, i * (this.config.rocketDuration / trailCount));
    }
  }

  createTrailParticle(x, y, progress) {
    const trail = document.createElement('div');
    trail.className = 'rocket-trail';
    
    // Trail particles get smaller as rocket ascends
    const size = 2 + (1 - progress) * 3; // Start bigger, get smaller
    const opacity = 0.7 - (progress * 0.5); // Fade as rocket ascends
    
    trail.style.width = `${size}px`;
    trail.style.height = `${size}px`;
    trail.style.left = `${x}px`;
    trail.style.top = `${y}px`;
    trail.style.background = `rgba(255, 255, 200, ${opacity})`;
    trail.style.boxShadow = `0 0 8px rgba(255, 255, 200, ${opacity * 0.8})`;

    this.container.appendChild(trail);

    // Enhanced trail fade animation
    const trailKeyframes = [
      { 
        transform: 'scale(1)',
        opacity: opacity
      },
      { 
        transform: 'scale(0.3)',
        opacity: 0
      }
    ];

    const trailAnimation = trail.animate(trailKeyframes, {
      duration: this.config.trailFadeDuration,
      easing: 'ease-out',
      fill: 'forwards'
    });

    trailAnimation.onfinish = () => {
      if (trail.parentNode) {
        trail.parentNode.removeChild(trail);
      }
    };
  }

  createBoldCircularBurst(centerX, centerY) {
    // Create bold circular burst with more particles
    for (let i = 0; i < this.config.burstParticleCount; i++) {
      this.createBoldBurstParticle(centerX, centerY, i);
    }
  }

  createBoldBurstParticle(centerX, centerY, index) {
    const particle = document.createElement('div');
    particle.className = 'burst-particle';
    
    // Bolder particle sizes
    const size = Math.random() * 
      (this.config.maxParticleSize - this.config.minParticleSize) + 
      this.config.minParticleSize;
    
    // Bold burst color
    const color = this.config.colors.burst[
      Math.floor(Math.random() * this.config.colors.burst.length)
    ];

    particle.style.width = `${size}px`;
    particle.style.height = `${size}px`;
    particle.style.background = color;
    particle.style.left = `${centerX}px`;
    particle.style.top = `${centerY}px`;

    // Perfect circular distribution with some randomness
    const angle = (index / this.config.burstParticleCount) * Math.PI * 2;
    const baseDistance = Math.random() * this.config.burstRadius;
    const wobble = Math.random() * 20 - 10; // Small wobble for organic feel
    const distance = baseDistance + wobble;
    
    // Calculate final position in circle
    const targetX = centerX + Math.cos(angle) * distance;
    const targetY = centerY + Math.sin(angle) * distance;

    this.container.appendChild(particle);
    this.animateBoldBurstParticle(particle, targetX, targetY, index);
  }

  animateBoldBurstParticle(particle, targetX, targetY, index) {
    const startX = parseFloat(particle.style.left);
    const startY = parseFloat(particle.style.top);
    
    // Stagger start times for more natural burst
    const startDelay = index * 10;
    
    // Random variations for organic feel
    const randomFactor = 0.8 + Math.random() * 0.4;

    // Bold burst animation with bounce effect
    const keyframes = [
      { 
        transform: 'translate(0, 0) scale(0.1)',
        opacity: 0,
        filter: 'blur(0px)'
      },
      { 
        transform: 'translate(0, 0) scale(1.2)',
        opacity: 1,
        filter: 'blur(0.5px)',
        offset: 0.2
      },
      { 
        transform: `translate(${targetX - startX}px, ${targetY - startY}px) scale(0.9)`,
        opacity: 0.7,
        filter: 'blur(1px)',
        offset: 0.6
      },
      { 
        transform: `translate(${(targetX - startX) * 1.1}px, ${(targetY - startY) * 1.1}px) scale(0.2)`,
        opacity: 0,
        filter: 'blur(2px)'
      }
    ];

    const animationOptions = {
      duration: this.config.burstDuration * randomFactor,
      delay: startDelay,
      easing: 'cubic-bezier(0.2, 0.9, 0.3, 1.1)', // Bounce effect
      fill: 'forwards'
    };

    const animation = particle.animate(keyframes, animationOptions);

    animation.onfinish = () => {
      if (particle.parentNode) {
        particle.parentNode.removeChild(particle);
      }
    };
  }
}

// Fixed Advanced version with all methods properly defined
class AdvancedBoldRocketFireworks extends BoldRocketFireworks {
  createRocket(startX, startY, targetY) {
    const rocketPattern = Math.random();
    
    if (rocketPattern < 0.25) {
      this.createCurvedRocket(startX, startY, targetY);
    } else if (rocketPattern < 0.5) {
      this.createZigzagRocket(startX, startY, targetY);
    } else if (rocketPattern < 0.75) {
      this.createSpiralRocket(startX, startY, targetY); // Now this method exists!
    } else {
      // Standard diagonal rocket
      const horizontalDrift = (Math.random() - 0.5) * 2 * this.config.maxHorizontalDrift;
      const targetX = startX + horizontalDrift;
      this.animateRocket(this.createRocketElement(startX, startY), startX, startY, targetX, targetY);
    }
  }

  createRocketElement(startX, startY) {
    const rocket = document.createElement('div');
    rocket.className = 'firework-particle';
    
    const size = 3;
    const color = this.config.colors.rocket[
      Math.floor(Math.random() * this.config.colors.rocket.length)
    ];

    rocket.style.width = `${size}px`;
    rocket.style.height = `${size}px`;
    rocket.style.background = color;
    rocket.style.left = `${startX}px`;
    rocket.style.top = `${startY}px`;
    rocket.style.boxShadow = '0 0 12px rgba(255, 255, 200, 0.9)';
    rocket.style.zIndex = '10';

    this.container.appendChild(rocket);
    return rocket;
  }

  createCurvedRocket(startX, startY, targetY) {
    const rocket = this.createRocketElement(startX, startY);
    const curveIntensity = Math.random() * 100 + 50;
    const curveDirection = Math.random() > 0.5 ? 1 : -1;

    const curveKeyframes = [
      { 
        transform: 'translate(0, 0) scale(1)',
        opacity: 1
      },
      { 
        transform: `translate(${curveDirection * curveIntensity * 0.3}px, ${(targetY - startY) * 0.5}px) scale(1.2)`,
        opacity: 1
      },
      { 
        transform: `translate(${curveDirection * curveIntensity}px, ${targetY - startY}px) scale(1.5)`,
        opacity: 1
      },
      { 
        transform: `translate(${curveDirection * curveIntensity}px, ${targetY - startY}px) scale(0.1)`,
        opacity: 0
      }
    ];

    const animation = rocket.animate(curveKeyframes, {
      duration: this.config.rocketDuration * 1.1,
      easing: 'cubic-bezier(0.3, 0.7, 0.4, 1)',
      fill: 'forwards'
    });

    this.createCurvedTrail(startX, startY, curveDirection * curveIntensity, targetY);
    
    animation.onfinish = () => {
      this.createBoldCircularBurst(startX + curveDirection * curveIntensity, targetY);
      if (rocket.parentNode) {
        rocket.parentNode.removeChild(rocket);
      }
    };
  }

  createCurvedTrail(startX, startY, curveX, targetY) {
    const trailPoints = 15;
    for (let i = 0; i < trailPoints; i++) {
      setTimeout(() => {
        const progress = i / trailPoints;
        const trailX = startX + curveX * progress;
        const trailY = startY + (targetY - startY) * progress;
        this.createTrailParticle(trailX, trailY, progress);
      }, i * (this.config.rocketDuration / trailPoints));
    }
  }

  createZigzagRocket(startX, startY, targetY) {
    const rocket = this.createRocketElement(startX, startY);
    const zigzagCount = 3;
    const segmentHeight = (targetY - startY) / zigzagCount;
    const zigzagAmplitude = 40;

    const zigzagKeyframes = [];
    
    for (let i = 0; i <= zigzagCount; i++) {
      const progress = i / zigzagCount;
      const y = segmentHeight * i;
      const x = Math.sin(progress * Math.PI * 2) * zigzagAmplitude;
      
      zigzagKeyframes.push({
        transform: `translate(${x}px, ${y}px) scale(${1 + progress * 0.5})`,
        opacity: 1,
        offset: progress
      });
    }

    zigzagKeyframes.push({
      transform: `translate(${Math.sin(1 * Math.PI * 2) * zigzagAmplitude}px, ${targetY - startY}px) scale(0.1)`,
      opacity: 0
    });

    const animation = rocket.animate(zigzagKeyframes, {
      duration: this.config.rocketDuration * 1.3,
      easing: 'cubic-bezier(0.4, 0.2, 0.6, 0.8)',
      fill: 'forwards'
    });

    this.createZigzagTrail(startX, startY, zigzagAmplitude, targetY, zigzagCount);
    
    animation.onfinish = () => {
      this.createBoldCircularBurst(startX + Math.sin(1 * Math.PI * 2) * zigzagAmplitude, targetY);
      if (rocket.parentNode) {
        rocket.parentNode.removeChild(rocket);
      }
    };
  }

  createZigzagTrail(startX, startY, amplitude, targetY, zigzagCount) {
    const trailPoints = 20;
    for (let i = 0; i < trailPoints; i++) {
      setTimeout(() => {
        const progress = i / trailPoints;
        const y = (targetY - startY) * progress;
        const x = Math.sin(progress * Math.PI * zigzagCount * 2) * amplitude;
        this.createTrailParticle(startX + x, startY + y, progress);
      }, i * (this.config.rocketDuration / trailPoints));
    }
  }

  // FIXED: Added the missing createSpiralRocket method
  createSpiralRocket(startX, startY, targetY) {
    const rocket = this.createRocketElement(startX, startY);
    const spiralTurns = 2;
    const spiralRadius = 60;

    const spiralKeyframes = [
      { 
        transform: 'translate(0, 0) rotate(0deg) scale(1)',
        opacity: 1
      },
      { 
        transform: `translate(${spiralRadius}px, ${(targetY - startY) * 0.8}px) rotate(${180 * spiralTurns}deg) scale(1.3)`,
        opacity: 1,
        offset: 0.8
      },
      { 
        transform: `translate(${spiralRadius}px, ${targetY - startY}px) rotate(${360 * spiralTurns}deg) scale(0.1)`,
        opacity: 0
      }
    ];

    const animation = rocket.animate(spiralKeyframes, {
      duration: this.config.rocketDuration * 1.4,
      easing: 'cubic-bezier(0.2, 0.8, 0.3, 1)',
      fill: 'forwards'
    });

    this.createSpiralTrail(startX, startY, spiralRadius, targetY, spiralTurns);
    
    animation.onfinish = () => {
      this.createBoldCircularBurst(startX + spiralRadius, targetY);
      if (rocket.parentNode) {
        rocket.parentNode.removeChild(rocket);
      }
    };
  }

  createSpiralTrail(startX, startY, radius, targetY, spiralTurns) {
    const trailPoints = 25;
    for (let i = 0; i < trailPoints; i++) {
      setTimeout(() => {
        const progress = i / trailPoints;
        const angle = progress * Math.PI * 2 * spiralTurns;
        const trailX = startX + Math.cos(angle) * radius * progress;
        const trailY = startY + (targetY - startY) * progress;
        this.createTrailParticle(trailX, trailY, progress);
      }, i * (this.config.rocketDuration / trailPoints));
    }
  }
}

// Initialize and start the bold rocket fireworks
document.addEventListener('DOMContentLoaded', function() {
  const fireworks = new AdvancedBoldRocketFireworks('fireworks-container');
  fireworks.start();
  
  // Optional: Stop fireworks when tab is not visible
  document.addEventListener('visibilitychange', function() {
    if (document.hidden) {
      fireworks.stop();
    } else {
      setTimeout(() => fireworks.start(), 1000);
    }
  });
});
</script>
<section class="py-2">
  <div class="container container-custom">
    <div class="row">
      
{{ filter }}
    
    
<div class="col-9">
  <div class="product-img-list">
<div class="row" id="product_box">

{% for product in products %}
<div class="col-lg-4 col-md-6 col-sm-12">
<div class="product-box-img">
  <div class="button-pd">
  <div class="like-heart mx-2"> 
  
    <span ><i class="fas fa-heart" onclick="wishlist.add('{{ product.product_id }}');" id="likeheart" ></i></span> 
  </div>  
  <div class="sharer">
        <button id="share" class="cursor-pointer ">
          <i class='bx bxs-share-alt'></i></button> 
          <div id="share_icons" class="absolute opacity-0"> 
            <a href="" class="pd-share cursor-pointer">
              <i class="bx bxl-twitter"></i>
            </a> 
            <a href="" class=" pd-share cursor-pointer">
              <i class="bx bxl-facebook"></i>
            </a> 
              <a href="" class=" pd-share cursor-pointer">
                <i class="bx bxl-linkedin"></i>
              </a> 
            </div> 

  </div> 

  </div>
  
  <div class="pd-img-in">
  {% if (product.stock_status == 'Out Of Stock') and (product.quantity == 0) %}
      <h3 class="shop-nowb-btn" style="margin-top: 19px;"> Out Of Stock</h3>
      {% else %}
      
      {# <input name="product_id" type="hidden" id="addtocart_p_id" value="{{ product.product_id }}">
      <input name="quantity" type="hidden" id="addtocart_p_qnty" value="1"> #}
  <button class="shop-nowb-btn" onclick="addtocart(1,{{ product.product_id }})"> Shop Now</button>
  
{% endif %}
{# {{ product.product_id }} #}
{# <a href="{{ product.href }}" type="button" class="shop-nowb-btn" style="margin-top: 19px;"> Shop Now</a> #}
    <a href="{{ product.href }}"><div class="overlay-pd"></div></a>
    {% if loop.first %}
                    {% if (product.stock_status == 'Out Of Stock') %}
                      <img src="{{ product.thumb }}" alt="{{ product.name }}" class="img-fluid out-of-stock" fetchpriority="high" loading="eager">
                    {% else %}
                      <img src="{{ product.thumb }}" alt="{{ product.name }}" class="img-fluid" fetchpriority="high" loading="eager">
                    {% endif %}

                  {% else %}
                    {% if (product.stock_status == 'Out Of Stock') %}
                      <img src="{{ product.thumb }}" alt="{{ product.name }}" class="img-fluid out-of-stock" loading="lazy">
                    {% else %}
                      <img src="{{ product.thumb }}" alt="{{ product.name }}" class="img-fluid" loading="lazy">
                    {% endif %}
                  {% endif %}
  </div>
  <div class="pd-deatils-sec">
    <div class="d-flex justify-content-between align-items-start p-2">
      <div class="pd-heading"> 
       <div class="pd-name"><a href="">{{ product.name }}</a></div> 
       {% if product.finish %}
        <div class="pd-config">({{ product.finish }}</div>
        {% endif %}
        <span class="pd-creater"> By {{ product.brand }}</span>
      </div>
      <div class="color-feature">
      {% if (product.stock_status == 'Out Of Stock') and (product.quantity == 0) %}
        <span class="availibility-pd">Out of Stock</span>
      {% else %}
      

      <span class="availibility-pd">Available Finish</span>
      <div class="color-feature-check"> 
      {% for progro in product.pro_gro %}
        <div class="zoom" data-toggle="tooltip" data-placement="top" title="{{progro.text }}">  
          <a href="{{ progro.link }}"><img src="catalog/view/javascript/assets/image/icon/{{progro.text|lower }}.jpg" alt="{{progro.text }}"></a>      
        </div>
      {% endfor %}
        
      </div>
      {% endif %}
      </div>
     
    </div>
    <hr>
    <div class="d-flex justify-content-between align-items-start p-2">
      <div class="pricing-pd">
        {# <span class="badge badgerating">
          {{ product.rating }}
          <span class="starr-rate"><i class="fas fa-star"></i></span>
        </span> #}
        {# <span class="likes">({{ product.review_count }})</span> #}
        <div class=""> 
        <div class="pd-amount"> {{ product.special }} </div> <div class="cut-ammount">{{ product.price }} </div>  
        <span class=" badge bridge-offer" style="font-size:10px">{{ product.discount }}% off </span>
      </div>
      </div>
      <div class="pd-offers">
      <ul>
        {# <li class="offer-list"> <i class="fas fa-check"></i> No Cost EMI </li> #}
        <li class="offer-list"> <i class="fas fa-check"></i> No Cost EMI </li>
      </ul>
      </div>
      
    </div>
  </div>
</div>
</div>
{% if  loop.index0 == 7 %}
  <div class="signup-banner-strip">
<div class="d-md-flex d-block justify-content-around align-items-center text-center ">
  <div class="sign-banner-con">
    <h5>Sign Up Now </h5>
      <p>&</p>
      <h6>get extra <span style="color:#fc0000;font-weight: 700;"> DISCOUNT</span></h6>
  </div>
  <div>
  <a href="" type="button" class="view_all_btn" style="margin-top: 19px;"> Sign Up</a>
  </div>
  <div class="banner-strip-img">
    <img src="catalog/view/javascript/assets/image/red-shape-bg.png" alt="" class="img-fluid img-responsive">
  </div>
</div>
</div>
{% endif %}
{% endfor %}




</div> 


 <div class="banner-strip-location">
  <div class="sign-banner-con text-lg-start text-cente">
    <h5 class="r text-white">VISIT OUR NEAREST STORE</h5>
      <p class="text-white">&</p>
      <h6 class=" text-white">get extra <span style="color:#fc0000; font-weight: 700;"> DISCOUNT</span></h6>
      <br>
      <a href="" class="shop-find-btn">Find Shop</a>
  </div>

<div class="image-forloaction">
    <div class="img-location-ceative">
      <img src="catalog/view/javascript/assets/image/location-strip.png" class="img-responsive img-fluid">
    </div>

</div>
 </div> 

</div>
</div>


</div>
</div>

</section> 

<section class="py-2">
<div class="container container-custom">
  <div class="row">
    <h2 class="pg-heading text-center">Popular Categories</h2>
    <p class="heading-para text-center">Unlimited Choices. Unbeatable Prices. Free Shipping</p>
    <div class="d-sm-flex d-block justify-content-center categories">
    <div class="item-box3">
    <img src="catalog/view/javascript/assets/image/icon/bed-pp-icon1.png" alt="">
     <h6>Beds</h6> 
     <p>883+ Options Available</p>
    </div>
    <div class="item-box3">
    <a href="beds">
      <img src="catalog/view/javascript/assets/image/icon/bed-pp-icon1.png" alt="">
       <h6>Sofas</h6> 
       <p>883+ Options Available</p>
       </a>
      </div>

      <div class="item-box3">
        <img src="catalog/view/javascript/assets/image/icon/bed-pp-icon1.png" alt="">
         <h6>Dining</h6> 
         <p>883+ Options Available</p>
        </div>

        <div class="item-box3">
          <img src="catalog/view/javascript/assets/image/icon/bed-pp-icon1.png" alt="">
           <h6>Shoe Rack</h6> 
           <p>883+ Options Available</p>
          </div>

          <div class="item-box3">
            <img src="catalog/view/javascript/assets/image/icon/bed-pp-icon1.png" alt="">
             <h6>Study Table</h6> 
             <p>883+ Options Available</p>
            </div>

            <div class="item-box3">
              <img src="catalog/view/javascript/assets/image/icon/bed-pp-icon1.png" alt="">
               <h6>bookcase</h6> 
               <p>883+ Options Available</p>
              </div>

              <div class="item-box3">
                <img src="catalog/view/javascript/assets/image/icon/bed-pp-icon1.png" alt="">
                 <h6>Wardrobes</h6> 
                 <p>883+ Options Available</p>
                </div>
  </div>
</div>
</div>
</section>

<section class="bottom-content py-4"> 
<div class="container container-custom"> 
<div class="row">
  <div class="col-lg-12">
  {{ long_description }}
   </div>
</div>
</div>


</section>
</div>
{{ footer }}
<script>
  var plock = 1;
  var page = 2;
  var limitp = 15;
  var categoryloadmore = {{category_id}};
  var queryString = window.location.href;
  var urlParam = '';
  
  $(window).scroll(function() {

    var scrollTop     = $(window).scrollTop();
    var elementOffset = $('#product_box').offset().bottom;
    var diffr = elementOffset-scrollTop;
    
    if($(window).scrollTop() >= $(
              '#product_box').offset().top + $('#product_box').
                outerHeight() - window.innerHeight -500){  

      if(plock==1){
        plock++;
        
        productLoading(); 
      }
    }
  });


  
var psort = '{{sort}}';
var pfilter = '{{filters_data}}';
var porder = '{{order}}';
var ajaxUrl = '';
function productLoading(){    

   ajaxUrl = '?route=product/category2/productLoading&limit='+limitp+'&page='+page+'&category_id='+categoryloadmore;

   if(typeof(psort)!='undefined'){
     ajaxUrl += '&sort='+psort;
   }

   if(typeof(pfilter)!='undefined'){

     ajaxUrl += '&filter='+pfilter;
   }

   if(typeof(porder)!='undefined'){
     ajaxUrl += '&order='+porder;
   }
    
   $.ajax({
      url: ajaxUrl,
      dataType: 'html',
      beforeSend: function() {
        var loader_img = '<img src="catalog/view/javascript/assets/image/load-sofa.gif" alt="Loading" id="loadicn" style="width:70px;height:70px;"/>';
  
   $("#product_box").append(loader_img);
      },
      success: function(html) {
        if(html.length != 0){
        page = page+1
        $("#loadicn").remove();
        $('#product_box').append(html);
        plock=1;
        }else{
          $("#loadicn").remove();
          plock=0;
        }

      },
      error: function(xhr, ajaxOptions, thrownError) {
       alert('Loading....');
     }
   });
  }

  $(".btAnimate").click(function(){
    $(".ViewContent").toggleClass("show");
  });
  </script>
  <script>
 function addtocart(quantity, product_id) {
  // var formdata = new FormData();
  // formData.append("quantity", quantity);
  // formData.append("product_id", product_id);

	$.ajax({
		url: 'index.php?route=checkout/cart/add',
		type: 'post',
		data: {"quantity":quantity,"product_id":product_id},
		dataType: 'json',
		beforeSend: function() {
			$('#button-cart').button('loading');
		},
		complete: function() {
			$('#button-cart').button('reset');
		},
		success: function(json) {
			$('.alert-dismissible, .text-danger').remove();
			$('.form-group').removeClass('has-error');

			if (json['error']) {
				if (json['error']['option']) {
					for (i in json['error']['option']) {
						var element = $('#input-option' + i.replace('_', '-'));

						if (element.parent().hasClass('input-group')) {
							element.parent().after('<div class="text-danger">' + json['error']['option'][i] + '</div>');
						} else {
							element.after('<div class="text-danger">' + json['error']['option'][i] + '</div>');
						}
					}
				}

				if (json['error']['recurring']) {
					$('select[name=\'recurring_id\']').after('<div class="text-danger">' + json['error']['recurring'] + '</div>');
				}

				// Highlight any found errors
				$('.text-danger').parent().addClass('has-error');
			}

			if (json['success']) {
				//$('.breadcrumb').after('<div class="alert alert-success alert-dismissible">' + json['success'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');
        $('body').prepend('<div class="success-popup ">	<span class="warrning-svg">	<svg id="smile"		width="35" height="35" viewBox="0 0 41 41" fill="none">					  <path d="M16.2432 29.9911L16.5968 30.3439L16.95 29.9907L30.5886 16.352L30.9422 15.9985L30.5886 15.6449L27.7128 12.7691L27.3593 12.4156L27.0057 12.7691L16.592 23.1828L12.2699 18.8682L11.9158 18.5148L11.5626 18.869L8.69086 21.7489L8.33792 22.1028L8.69174 22.4558L16.2432 29.9911ZM0.823975 20.662C0.823975 9.72375 9.72375 0.823975 20.662 0.823975C31.6002 0.823975 40.5 9.72375 40.5 20.662C40.5 31.6002 31.6002 40.5 20.662 40.5C9.72375 40.5 0.823975 31.6002 0.823975 20.662Z" stroke="#33C300"/>  </svg>					</span>	<span class="warrning-text">   <p>' + json['success'] + '</p>	</span>				  </div>');
				$('#cartli .badge_pp').text(json['total']);
				$('html, body').animate({ scrollTop: 0 }, 'slow');

				$('#cart > ul').load('index.php?route=common/cart/info ul li');
			}
		},
        error: function(xhr, ajaxOptions, thrownError) {
            alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
	});
}
</script>